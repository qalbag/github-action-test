name: test.yml

on: 
  workflow_dispatch:
    
jobs:
  fod-sast-scan:
    if: true
    strategy:
      fail-fast: false
      # Prevent running multiple FoD scans on same release simultaneously
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run FoD SAST scan
        uses: fortify/github-action@main
        with:
          sast-scan: true
          debricked-sca-scan: true
        env:
          FOD_URL: ${{ vars.FOD_URL }}
          FOD_TENANT: ${{secrets.OSS_FOD_TENANT}}
          FOD_USER: ${{secrets.OSS_FOD_USER}}
          FOD_PASSWORD: ${{secrets.OSS_FOD_PAT}}
          FOD_LOGIN_EXTRA_OPTS: --socket-timeout=600s
          FOD_SAST_SCAN_EXTRA_OPTS: --notes "These are notes from the GitHub Action"
          DO_SETUP: true
          DO_POLICY_CHECK: true
          DO_JOB_SUMMARY: true
          DO_PR_COMMENT: true
          DO_EXPORT: true
          SC_CLIENT_VERSION: 23.1
          SETUP_EXTRA_OPTS: --sdlc-status QA --scan-types sast
          POLICY_CHECK_ACTION: ./check-policy.yaml
          POLICY_CHECK_EXTRA_OPTS: --on-unsigned=warn --pass true
          
  export-test:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run SC-SAST & Debricked scan
        uses: fortify/github-action/ssc-export@main
        env:
          SSC_URL: ${{ vars.SSC_UAT_URL }}
          SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
          SSC_APPVERSION: GitHub:EightBall
          EXPORT_EXTRA_OPTS: --fs "Quick View"
 
  sc-sast-scan-main:
    if: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run SC-SAST scan
        uses: fortify/github-action@main
        with:
          sast-scan: true
        env:
          SSC_URL: ${{ vars.SSC_UAT_URL }}
          SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
          SSC_APPVERSION: GitHub:EightBall
          SC_SAST_TOKEN: ${{secrets.SC_SAST_UAT_TOKEN}}
          SC_SAST_SENSOR_VERSION: 23.2.0
          DO_EXPORT: true
          DO_JOB_SUMMARY: true
          SETUP_EXTRA_OPTS: --issue-template "Prioritized High Risk Issue Template"
          JOB_SUMMARY_EXTRA_OPTS: --fs "Security Auditor View"
 
  sc-sast-scan:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run SC-SAST & Debricked scan
        uses: fortify/github-action@main
        with:
          sast-scan: true
          debricked-sca-scan: false
        env:
          SSC_URL: ${{ vars.SSC_UAT_URL }}
          SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
          SC_SAST_TOKEN: ${{secrets.SC_SAST_UAT_TOKEN}}
          SC_SAST_SENSOR_VERSION: 23.2.0
          DO_SETUP: true
          DO_POLICY_CHECK: true
          DO_JOB_SUMMARY: true
          DO_PR_COMMENT: true
          DO_EXPORT: true
          SETUP_EXTRA_OPTS: --issue-template "Prioritized High Risk Issue Template"
          JOB_SUMMARY_EXTRA_OPTS: --fs "Security Auditor View"
          POLICY_CHECK_ACTION: ./check-policy.yaml
          POLICY_CHECK_EXTRA_OPTS: --on-unsigned=warn --pass true
          
  sc-sast-and-debricked-scan:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run SC-SAST & Debricked scan
        uses: fortify/github-action@main
        with:
          sast-scan: true
          debricked-sca-scan: true
        env:
          SSC_URL: ${{ vars.SSC_UAT_URL }}
          SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
          SC_SAST_TOKEN: ${{secrets.SC_SAST_UAT_TOKEN}}
          DEBRICKED_TOKEN: ${{secrets.DEBRICKED_TOKEN}}
          SC_SAST_SENSOR_VERSION: 24.2.0
          DO_SETUP: true
          DO_POLICY_CHECK: true
          DO_JOB_SUMMARY: true
          DO_PR_COMMENT: true
          DO_EXPORT: true
          JOB_SUMMARY_EXTRA_OPTS: --fs "Security Auditor View"
          POLICY_CHECK_ACTION: ./check-policy.yaml
          POLICY_CHECK_EXTRA_OPTS: --on-unsigned=warn --pass true
          
  debricked-only-scan:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      - name: Run Debricked scan & upload to SSC
        uses: fortify/github-action@main
        with:
          sast-scan: false
          debricked-sca-scan: true
        env:
          SSC_URL: ${{ vars.SSC_UAT_URL }}
          SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
          SSC_APPVERSION: GitHub:EightBall
          DEBRICKED_TOKEN: ${{secrets.DEBRICKED_TOKEN}}
          DO_WAIT: false
     
  setup-test:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:    
      - name: Setup fcli 1.3.1
        if: always()
        uses: fortify/github-action/setup@main
        with:
          fcli: 1.3.1
      - run: fcli -V
      - name: Setup latest fcli v1
        if: always()
        uses: fortify/github-action/setup@main
        with:
          fcli: v1
      - run: fcli -V
      - name: Setup fcli 2.2.0 
        if: always()
        uses: fortify/github-action/setup@main
        with:
          fcli: 2.2.0
      - run: fcli -V
      - if: always()
        run: |
          echo "PATH: $PATH"
          echo "FCLI_INSTALL_DIR: $FCLI_INSTALL_DIR"
          echo "FCLI_BIN_DIR: $FCLI_BIN_DIR"
          echo "FCLI_CMD: $FCLI_CMD"
      - name: Setup fcli action-default
        if: always()
        uses: fortify/github-action/setup@main
        with:
          fcli: action-default
      - run: fcli -V
      - if: always()
        run: |
          echo "PATH: $PATH"
          echo "FCLI_INSTALL_DIR: $FCLI_INSTALL_DIR"
          echo "FCLI_BIN_DIR: $FCLI_BIN_DIR"
          echo "FCLI_CMD: $FCLI_CMD"
      - name: Debricked CLI
        uses: fortify/github-action/setup@main
        with:
          debricked-cli: latest
          export-path: true
      - name: Debricked CLI info
        continue-on-error: true
        run: |
          echo "PATH: $PATH"
          echo "DEBRICKED_CLI_CMD: $DEBRICKED_CLI_CMD"
  
  test-defaults:
    runs-on: ubuntu-latest
    steps:
      - uses: fortify/github-action/internal/set-fod-var-defaults@main

  test-fod-login:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      FOD_URL: ${{ vars.FOD_URL }}
      FOD_TENANT: ${{secrets.OSS_FOD_TENANT}}
      FOD_USER: ${{secrets.OSS_FOD_USER}}
      FOD_PASSWORD: ${{secrets.OSS_FOD_PAT}}
    steps:
      - name: Setup fcli action-default
        uses: fortify/github-action/setup@main
        with:
          fcli: action-default
      - name: Login once
        uses: fortify/github-action/internal/fod-login@main
      - name: Login again
        uses: fortify/github-action/internal/fod-login@main
      - name: Login once more
        uses: fortify/github-action/internal/fod-login@main

  test-sc-sast-login:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      SSC_URL: ${{ vars.SSC_UAT_URL }}
      SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
      SC_SAST_TOKEN: ${{secrets.SC_SAST_UAT_TOKEN}}
    steps:
      - name: Setup fcli action-default
        uses: fortify/github-action/setup@main
        with:
          fcli: action-default
      - name: SC-SAST - Login once
        uses: fortify/github-action/internal/sc-sast-login@main
      - name: SSC - Login once
        uses: fortify/github-action/internal/ssc-login@main
      - name: SC-SAST - Login again
        uses: fortify/github-action/internal/sc-sast-login@main
      - name: SSC - Login again
        uses: fortify/github-action/internal/ssc-login@main
      - name: SC-SAST - Login once more
        uses: fortify/github-action/internal/sc-sast-login@main
      - name: SSC - Login once more
        uses: fortify/github-action/internal/ssc-login@main
        
  test-ssc-login:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      SSC_URL: ${{ vars.SSC_UAT_URL }}
      SSC_TOKEN: ${{secrets.SSC_UAT_TOKEN}}
    steps:
      - name: Setup fcli action-default
        uses: fortify/github-action/setup@main
        with:
          fcli: action-default
      - name: Login once
        uses: fortify/github-action/internal/ssc-login@main
      - name: Login again
        uses: fortify/github-action/internal/ssc-login@main
      - name: Login once more
        uses: fortify/github-action/internal/ssc-login@main
        
        
  myjob:
    runs-on: ubuntu-latest
    if: false
    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
      
      - name: Setup test 1
        uses: fortify/github-action/setup@main
        with:
          test: |
            prop1:
              subProp1: ${{ secrets.TEST_SECRET }}
              subProp2: def
            prop2:
              sub2Prop1: xyz
              
      - name: Display test 1 info
        continue-on-error: true
        run: |
          echo "PATH: $PATH"
          echo "SC_CLIENT_CMD: $SC_CLIENT_CMD"
          echo "VULN_EXPORTER_CMD: $VULN_EXPORTER_CMD"
          echo "FOD_UPLOADER_CMD: $FOD_UPLOADER_CMD"
          echo "Fcli version on path: $(fcli -V)"
          
      - name: Setup test 2
        uses: fortify/github-action/setup@main
        with:
          fcli: dev_develop
          sc-client: 22.1.0
          vuln-exporter: 2.0.3
          fod-uploader: default
      - name: Display test 2 info
        continue-on-error: true
        run: |
          echo "PATH: $PATH"
          echo "SC_CLIENT_CMD: $SC_CLIENT_CMD"
          echo "VULN_EXPORTER_CMD: $VULN_EXPORTER_CMD"
          echo "FOD_UPLOADER_CMD: $FOD_UPLOADER_CMD"
          echo "Fcli version on path: $(fcli -V)"
          echo "FCLI_CMD version: $(${FCLI_CMD} -V)"
          
      - name: Setup test 3
        uses: fortify/github-action/setup@main
        with:
          fcli: 1.3.1
      - name: Display test 3 info
        continue-on-error: true
        run: |
          echo "PATH: $PATH"
          echo "SC_CLIENT_CMD: $SC_CLIENT_CMD"
          echo "VULN_EXPORTER_CMD: $VULN_EXPORTER_CMD"
          echo "FOD_UPLOADER_CMD: $FOD_UPLOADER_CMD"
          echo "Fcli version on path: $(fcli -V)"
          echo "FCLI_CMD version: $(${FCLI_CMD} -V)"
          
      - name: Setup test 4
        uses: fortify/github-action/setup@main
        with:
          fcli: dev_2.0.0-beta
          export-path: false
      - name: Display test 4 info
        continue-on-error: true
        run: |
          echo "PATH: $PATH"
          echo "SC_CLIENT_CMD: $SC_CLIENT_CMD"
          echo "VULN_EXPORTER_CMD: $VULN_EXPORTER_CMD"
          echo "FOD_UPLOADER_CMD: $FOD_UPLOADER_CMD"
          echo "Fcli version on path: $(fcli -V)"
          echo "FCLI_CMD version: $(${FCLI_CMD} -V)"
              
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Package Code + Dependencies
        uses: fortify/github-action/package@main
        env:
          PACKAGE_OPTS: "-bt mvn"
          
      - name: Display ScanCentral Client version on PATH
        continue-on-error: true
        run: |
          scancentral -version
